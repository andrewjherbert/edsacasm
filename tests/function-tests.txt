; EDSAC FUNCTIONAL TEST PROGRAM - Andrew Herbert - 17 December 2023
;
; (Approx 350 locations)

.START.

; FUNCTION TEST - JUMPS

.JMPTESTS.      T .SPARE.D      ; Clear Acc

;  E 0 (jump)
.T01.           E .T02. F
.ERR1.          Z1F

; E MAXPOS (jump)
.T02.           A .MAXPOS. D
                E .T03. F
.ERR2.          Z2F

; E MAXNEG (no jump)
.T03.           T .SPARE. D     ; clear Acc
                A .MAXNEG. D
                E .ERR3. F
; G MAXNEG (jump)
.T05.           G .T06. F
.ERR4.          Z4F

; G 0 (no jump)
.T06.           T .SPARE. D     ; clear Acc
                G .ERR5. F

; G MAXPOS (no jump)
.T07.           A .MAXPOS. D
                G .ERR6. F
                E .T08. F

; FUNCTION TEST -  ADDITION

.ADDTESTS.

; add 0 + 0
.T08.           T .SPARE. D
                A .ZERO. D      ; 0 + 0
                G .ERR7. F      ; 0 + 0 < 0 -- wrong
                A .MINUS1. D    ; 0 + 0 - 1
                E .ERR8. F      ; 0 + 0 - 1 >= 0 -- wrong
                G .T09. F


; add -1 + 1 = 0
.T09.           T .SPARE. D
                A .MINUS1. D
                A .ONE. D
                G .ERR9. F      ; -1+1 < 0
                A .MINUS1. D
                E .ERR10. F     ; -1+1-1 >= 0 -- wrong
                G .T10. F
.ERR11.         Z11F

; add PAT1+ PAT2 = -1
.T10.           T .SPARE. D
                A .PAT1. D
                A .PAT2. D
                E .ERR12. F     ; P1+P2 >= 0 -- wrong
                A .ONE. D
                G .ERR13. F     ; P1+P2+1 < 0 -- wrong
                E .T11. F
.ERR14.

; add PAT1 + PAT1 + PAT1 = -2
.T11.           T .SPARE. D
                A .PAT1. D
                A .PAT1. D
                A .PAT1. D
                E .ERR15. F     ; P1+P1+P1 >= 0 -- wrong
                A .TWO. D       ; P1+P1+P1+2 < 0 -- wrong
                G .ERR16. F
                E .T12. F
.ERR17.         Z17F

; add PAT2 + PAT2 + PAT2  = -1
.T12.          T .SPARE. D
                A .PAT2. D
                A .PAT2. D
                A .PAT2. D
                E .ERR18. F     ; P2+P2+P2 >= 0 -- wrong
                A .ONE. D
                G .ERR19. F     ; P2+P2+P2+1 < 0 -- wrong
                E .T13. F
.ERR20.         Z20F

; FUNCTION TEST - SUBTRACTION

.SUBTRACTTESTS.

; subtract 0 - 0 = 0
.T13.           T .SPARE. D
                S .ZERO. D
                G .ERR21. F     ; 0 - 0 < 0 -- Fail
                S .ONE. D
                G .T14. F       ; 0 - 0 - = 0 -- Pass
.ERR22.         Z22F

; subtract 1 - 1 = 0
.T14.           T .SPARE. D
                A .ONE. D
                S .ONE. D
                G .ERR23. F     ; 1 - 1 < 0 -- Fail
                S .ONE. D
                G .T15. F       ; 1 - 1 = 0 -- Pass
.ERR24.         Z24F

;subtract  -1 - 0 = -1
.T15.           T .SPARE. D
                A .MINUS1. D
                S .ZERO. D
                E .ERR25. F     ; -1 - 0 >= 0 -- wrong
                A .ONE. D
                E .T16. F       ; -1 - 0 + 1 >= 0 -- Pass
 .ERR26.        Z26F

; subtract 0 - 1 = -1
.T16.           T .SPARE. D
                S .ONE. D
                E .ERR27. F     ; 0 - 1 >= 0 -- Fail
                A .ONE. D
                E .T17. F       ; 0 - 1 + 1 >= 0 -- Pass
 .ERR28.        Z28F

; FUNCTION TEST - COLLATION

.COLLATETESTS.

; collate 0 & -1 = 0
.T17.           T .SPARE. D
                H .ZERO. D
                C .MINUS1. D
                G .ERR29. F     ; 0 & -1 < 0 -- wrong
                S .ONE. D
                G .T18. F       ; (0 & -1) = 0 -- Pass
 .ERR30.        Z30F

; collate -1 & 0 = 0
.T18.           T .SPARE. D
                H .MINUS1. D
                C .ZERO. D
                G .ERR31. F     ; -1 & 0 < 0 -- wrong
                S .ONE. D
                G .T19. F       ; (--1 & 0) >= 0 -- Pass
.ERR32.         Z32F

; collate -1 & -1 = -1
.T19.           T .SPARE. D
                H .MINUS1. D
                C .MINUS1. D
                E .ERR33. F     ; -1 & -1 >= 0 -- wrong
                A .ONE. D
                E .T20. F         ; -1 & -1 + 1 >= 0 -- Pass
 .ERR34.        Z34F

; collate PAT3 & PAT4 = PAT5
.T20.           T .SPARE. D
                H .PAT3. D
                C .PAT4. D
                S .PAT5. D
                G .ERR35. F     ; p1 & p2 - p3 < 0 -- wrong
                S .ZERO. D
                E .T21. F       ; p1 & p2 -p3 -1 < 0 -- Pass
.ERR36.         Z36F

; FUNCTION TEST -  SHIFT

.SHIFTTESTS.

; shift PAT6 left 1 place = PAT7
.T21.           T .SPARE. D
                A .PAT6. D
                L 0 D           ; shift left 1 place
                S .PAT7. D
                G .ERR37. F     ; < 0: fail
                S .ONE. D
                G .T22. F       ; = 0: pass
.ERR38.         Z38F

; shift PAT7 left 1 place = PAT8
.T22.           T .SPARE. D
                A .PAT7. D
                L 0 D
                S .PAT8. D
                G .ERR39. F     ; >= 0: fail
                S .ONE. D
                G .T23. F       ; = 0: pass
.ERR40.         Z40F


; shift PAT9 right 1 place = PAT10
.T23.           T .SPARE. D
                A .PAT9. D
                R 0 D           ; shift right 1 place
                S .PAT10. D
                G .ERR41. F     ; < 0: fail
                S .ONE. D
                G .T24. F       ; = 0: pass
.ERR42.         Z42F

; shift PAT11 right 1 place = PAT12
.T24.           T .SPARE. D
                A .PAT11. D
                R 0 D           ; shift right 1 place
                S .PAT12. D
                G .ERR43. F     ; < 0: fail
                S .ONE. D
                G .T25. F       ; = 0: pass
.ERR44.         Z44F

; -2^34 shift right 70 places (acc = 71 bits) sends top bit to bottom
.T25.           T .SPARE. D
                A .MAXNEG. D
                R 0 F           ; shift right 15 places
                R 0 F           ; shift right 30 places
                R 0 F           ; shift right 45 places
                R 0 F           ; shift right 60 places
                R 256 F         ; shift right 70 places
                G #+2 F
.ERR45.         Z45F            ; >= 0: fail
                A .ONE. D
                E .T26. F       ; = -1: pass
.ERR46.         Z46F

; shift result left 70 places store restore top bit
.T26.           L 0 F           ; shift left 13 places
                L 0 F           ; shift left 26 places
                L 0 F           ; shift left 39 places
                L 0 F           ; shift left 52 places
                L 0 F           ; shift left 65 places
                L 8 F           ; shift left 70 places
                G #+2 F
.ERR47.         Z47F            ; >= 0: fail
                S .MAXNEG. D
                G .ERR48. F     ; < 0:  fail
                S .ONE. D
                G .T27. F       ; = 0:  pass
.ERR49.         Z49F

; FUNCTION TEST - ROUNDING

.ROUNDTESTS.

; no rounding required
 .ROUND.
 .T27.          T .SPARE. D
                A .ZERO. D
                Y 0 D
                G .ERR50. F     ; < 0: fail
                L 0 D           ; check bit 35
                S .ONE. D
                G .ERR51. F
                E .T28. F       ; = 0: pass
.ERR52.         Z52F

; rounding required
.T28.           T .SPARE. D
                A .ONE. D
                R 0 D           ; set bit 35
                Y 0 D
                G .ERR53. F     ; < 0: fail
                S .TWO. D
                G .T29. F
.ERR54.         Z54F

; FUNCTION TEST -  MULTIPLICATION

.MULTIPLYTESTS.

; case 0: 0 * 0 = 0
.T29.           T .SPARE. D     ; clear accumulator
                H .ZERO. D      ; calculate 0 * 0
                V .ZERO. D
                G .ERR55. F     ; < 0: fail
                S .ONE. D
                G .T30. F       ; = 0: pass
.ERR56.         Z56F

;  0 * 1 = 0
.T30.           T .SPARE. D     ; clear accumulator
                H .ZERO. D      ; calculate 0 * 0
                V .ONE. D
                G .ERR57. F     ; < 0: fail
                S .ONE. D
                G .T31. F       ; = 0: pass
.ERR58.         Z58F

; 0 * -1 = 0
.T31.           T .SPARE. D     ; clear accumulator
                H .ZERO. D      ; calculate 0 * 0
                V .MINUS1. D
                G .ERR59. F     ; < 0: fail
                S .ONE. D
                G .T32. F       ; = 0: pass
.ERR60.         Z60F


; 1 * 1 = 1
.T32.           T .SPARE. D     ; clear accumulator
                H .ONE. D       ; calculate 1 * 1 * 1
                V .ONE. D
                G .ERR61. F     ; < 0: fail
                S .TWO. D
                G .T33. F       ; = 0: pass
.ERR62.         Z62F

; -1 * -1 = 1
.T33.           T .SPARE. D     ; clear accumulator
                H .MINUS1. D    ; calculate -1 * -1 = 1
                V .MINUS1. D
                G .ERR63. F     ; < 0: fail
                S .TWO. D
                G .T34. F       ; = 0: pass
.ERR64.         Z64F

; -1 * 1 = -1
.T34.           H .MINUS1. D    ; calculate -1 * 1 = 1
                V .ONE. D
                E .ERR65. F     ; < 0: fail
                S .TWO. D
                G .T35. F       ; = 0: pass
.ERR66.         Z66F

;  -2^34 * -2^34 = --2^34
.T35.           T .SPARE. D     ; clear accumulator
                H .MAXNEG. D
                V .MAXNEG. D
                G #+2 F
.ERR67.         Z67F            ; >= 0: fail
                S .MAXNEG. D
                E .T36. F       ; = 0: pass
.ERR68.         Z68F

; PAT13 * PAT13 = PAT14
.T36.           T .SPARE. D     ; clear accumulator
                A .PAT14. D
                H .PAT13. D
                N .PAT13. D
                E #+2 F
.ERR69.         Z69F            ; < 0: fail
                S .ONE. D
                G .T37. F       ; = 0: pass
.ERR70.         Z70F

; PAT15 * PAT16 = PAT17
.T37.           T .SPARE. D
                S .PAT17. D
                H .PAT15. D
                V .PAT16. D
                E #+2 F
.ERR71.         Z71F            ; < 0: fail
                S .ONE. D
                G .T38. F       ; = 0: pass
.ERR72.         Z72F

; PAT18 * PAT19 = PAT20
.T38.           T .SPARE. D
                H .PAT18. D
                V .PAT19. D
                L 0 F           ; shift left 13 places
                L 0 F           ; shift left 26 places
                L 128 F         ; shift left 35 places
                S .PAT20. D
                E #+2 F
.ERR73.         Z73F            ; < 0: fail
                S .ONE. D
                G .T39. F       ; = 0: pass
.ERR74.         Z74F


; FUNCTION TEST - Transfer Unit / Short numbers

.TRANSFERTESTS.

; PAT21 + PAT22 = -1
.T39.           T .SPARE. F
                A .PAT21. F
                A .PAT22. F
                G #+2 F
.ERR75.         Z75F            ; >= 0: fail
                A .ONE. F
                E .T40. F       ; = -1: pass
.ERR76.         Z76F

; PAT21 * PAT22 = PAT23
.T40.           T .SPARE. F
                H .PAT21. F
                V .PAT22. F
                G #+2 F
.ERR78.         Z78F
                S .PAT23. D
                E .T41. F
.ERR79.         Z79F

; FUNCTION TEST - T and U orders

.TUTESTS.
.T41.           T .SPARE. D
                A .MINUS1. D
                T .SPARE. D
                E #+2 F         ; < 0: fail
.ERR80.         Z80F
                S .ONE. D
                G #+2 F         ; = 0: pass
.ERR88.         Z88F
                A .ONE. D
                A .SPARE. D
                G #+2 F         ; >= 0: fail
.ERR89.         Z89F
                A .ONE. D
                E #+2 F         ; =-1: pass
.ERR90.         Z90F
                A .MINUS1. D
                U .SPARE. D
                S .SPARE. D
                E #+2 F         ; < 0: fail
.ERR91.         Z91F
                S .ONE. F
                G .START. F     ; = 0: pass
.ERR92.         Z92F

.ERR3.          Z3F
.ERR5.          Z5F
.ERR6.          Z6F
.ERR7.          Z7F
.ERR8.          Z8F
.ERR9.          Z9F
.ERR10.         Z10F
.ERR12.			Z12F
.ERR13.         Z13F
.ERR15.         Z15F
.ERR16.         Z16F
.ERR18.         Z18F
.ERR19.         Z19F
.ERR21.         Z21F
.ERR23.         Z23F
.ERR25.         Z25F
.ERR27.         Z25F
.ERR29.         Z29F
.ERR31.			Z31F
.ERR33.         Z32F
.ERR35.         Z35F
.ERR37.         Z37F
.ERR39.         Z39F
.ERR41.         Z41F
.ERR43.         Z43F
.ERR48.         Z48F
.ERR50.         Z50F
.ERR51.         Z51F
.ERR53.         Z53F
.ERR55.         Z55F
.ERR57.         Z57F
.ERR59.         Z59F
.ERR61.         Z61F
.ERR63.         Z63F
.ERR65.         Z65F

; data - align on even address
@
.SPARE.           +0L
.ZERO.            +0L
.ONE.             +1L
.TWO.             +2L
.MINUS1.          -1L
.MAXPOS.          B01111111111111111111111111111111111L
.MAXNEG.          B10000000000000000000000000000000000L

.PAT1.            B01010101010101010101010101010101010L
.PAT2.            B10101010101010101010101010101010101L

.PAT3.            B10000011111100000111111100000011111L
.PAT4.            B11111110000011111110000011111111111L
.PAT5.            B10000010000000000110000000000011111L

.PAT6.            B10101010101010101010101010101010101L
.PAT7.            B01010101010101010101010101010101010L
.PAT8.            B10101010101010101010101010101010100L

.PAT9.            B10101010101010101010101010101010101L
.PAT10.           B11010101010101010101010101010101010L
.PAT11.           B01010101010101010101010101010101010L
.PAT12.           B00101010101010101010101010101010101L

.PAT13.           B10110011001100110100000000000000000L
.PAT14.           B00101110000101000110101110000101001L

.PAT15.           B10110011001100110100000000000000000L
.PAT16.           B00000000000000000100000000000000000L
.PAT17.           B11111111111111111101100110011001101L

.PAT18.           B11111111111111111110110011001100110L
.PAT19.           B00000000000000000000000000000000010L
.PAT20.           B11111111111111111011001100110011000L


.PAT21.           B10101010101010101
.PAT22.           B01010101010101010


.PAT23.           B11000111000111001000111000111001000L




